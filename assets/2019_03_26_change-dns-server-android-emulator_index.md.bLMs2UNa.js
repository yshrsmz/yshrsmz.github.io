import{_ as s,a as e,o as n,X as t}from"./chunks/framework.Cp7KI1mb.js";const m=JSON.parse('{"title":"MacでAndroidエミュレータのDNSサーバを変える","description":"","frontmatter":{"layout":"post","title":"MacでAndroidエミュレータのDNSサーバを変える","category":"programming","tags":["Android","mac"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2019/03/26/change-dns-server-android-emulator/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2019/03/26/change-dns-server-android-emulator/"}],["meta",{"property":"og:title","content":"MacでAndroidエミュレータのDNSサーバを変える"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2019/03/26/change-dns-server-android-emulator/ogp.png"}]]},"headers":[],"relativePath":"2019/03/26/change-dns-server-android-emulator/index.md","filePath":"posts/2019/2019-03-26-change-dns-server-android-emulator.md","date":{"time":"2019-03-26","string":"March 26, 2019","year":"2019","month":"03","day":"26"}}'),o={name:"2019/03/26/change-dns-server-android-emulator/index.md"};function d(i,a,r,p,l,c){return n(),e("div",null,[...a[0]||(a[0]=[t(`<p>Androidエミュレータのhostsを変えるのはちょっと手間なので、ローカルでDNSサーバをたててなんとかしてみる。</p><p>dnsmasqというツールを使う。</p><h2 id="dnsmasqのインストール-設定" tabindex="-1">dnsmasqのインストール/設定 <a class="header-anchor" href="#dnsmasqのインストール-設定" aria-label="Permalink to &quot;dnsmasqのインストール/設定&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ brew install dnsmasq</span></span></code></pre></div><p><code>/etc/dnsmasq.hosts</code> を作成。</p><p>dnsmasqで使っていくhostsファイル。 Mac自身で使う必要はないので別に用意する。 記法は普通のhostsファイルと同じ。</p><p><code>/usr/local/etc/dnsmasq.conf</code> に下記を追加。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># dnsmasqだけで使うhostsファイル</span></span>
<span class="line"><span>addn-hosts=/etc/dnsmasq.hosts</span></span>
<span class="line"><span># ログを出力したければ下記を追加。</span></span>
<span class="line"><span># パスは任意の場所で構わない。先にディレクトリを作っておくこと</span></span>
<span class="line"><span>log-queries</span></span>
<span class="line"><span>log-facility=/usr/local/var/log/dnsmasq/dnsmasq.log</span></span></code></pre></div><h2 id="dnsmasqの起動" tabindex="-1">dnsmasqの起動 <a class="header-anchor" href="#dnsmasqの起動" aria-label="Permalink to &quot;dnsmasqの起動&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ sudo brew services start dnsmasq</span></span></code></pre></div><h2 id="androidエミュレータの起動" tabindex="-1">Androidエミュレータの起動 <a class="header-anchor" href="#androidエミュレータの起動" aria-label="Permalink to &quot;Androidエミュレータの起動&quot;">​</a></h2><p>DNSサーバを設定するためコマンドラインから起動する</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ emulator -avd AVD_NAME -dns-server 127.0.0.1</span></span></code></pre></div><p>エミュレータの名前は <code>$ emulator -list-avds</code> で取得できる。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PANIC: Missing emulator engine program for &#39;x86&#39; CPU.</span></span></code></pre></div><p>が出る場合は違うコマンドを参照している。 PATHに<code>$ANDROID_HOME/emulator</code>を追加すること。その際、<code>$ANDROID_HOME/tools</code>より先に記述する。</p>`,16)])])}const g=s(o,[["render",d]]);export{m as __pageData,g as default};
