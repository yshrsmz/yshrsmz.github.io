import{_ as t,a,o as r,X as i}from"./chunks/framework.Cp7KI1mb.js";const m=JSON.parse('{"title":"TwitterにURLを共有するAndroidアプリ、Omnitweetyを公開した","description":"","frontmatter":{"layout":"post","title":"TwitterにURLを共有するAndroidアプリ、Omnitweetyを公開した","category":"programming","tags":["Android","omnitweety","twitter"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2015/11/10/omnitweety-andrid-released-share-url-twitter/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2015/11/10/omnitweety-andrid-released-share-url-twitter/"}],["meta",{"property":"og:title","content":"TwitterにURLを共有するAndroidアプリ、Omnitweetyを公開した"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2015/11/10/omnitweety-andrid-released-share-url-twitter/ogp.png"}]]},"headers":[],"relativePath":"2015/11/10/omnitweety-andrid-released-share-url-twitter/index.md","filePath":"posts/2015/2015-11-10-omnitweety-andrid-released-share-url-twitter.md","date":{"time":"2015-11-10","string":"November 10, 2015","year":"2015","month":"11","day":"10"}}'),o={name:"2015/11/10/omnitweety-andrid-released-share-url-twitter/index.md"};function l(n,e,p,s,d,h){return r(),a("div",null,[...e[0]||(e[0]=[i(`<p><img src="https://lh3.googleusercontent.com/q8OyY9We1h1ieTTjKGPsGWzfSQDI9Q05EFACUlqkaY2YwDjbvANstl1Y11JQ-YEexj0shTp6UyHvsah7XGF0hf3Mnk4Z5-iJDdYTbYUtu5VGwfcum7JaI_I2zs5eYtOcOp0IjRQyySl1YbezCtbU9EC4PEoh-nHbZ_9hpuYvNBmyX1a8fD_HqHlEGpK6h34Uj92DgOBskw-oMuLwkyWZQibMc4FRpbo10U-zYa9hWEIdFxCyORIQlCsq5EbptMyN_hjulZtX5QYmIKKwh8KN7Iz9PWG08Lflo0DZU-nDHpjqnQsmTwmp0NC7OXex2JVI9KW3iAOpJzAZSF9zjJHgFjenG6_WYZoqQlpqA2eQHUbEpuX1hTyRUnoju7b1dLMiPslNQqvogaql_o6Ib8UsDytB3TlgvyNXt7b_m-WaxZfHq0-4wKMCmwptVyAAe3mx4kf0ul5Qa3CRm-e_pJp7w5CU-2PJmuWocsqsF9IoDc0ulU_nhI3BSydu22MO-yP2lzh6a7RhWdPw5Mm-d9VPB8x3dTIF5IOgbeNloxQUzqo=w1024-h500-no" alt="logo"></p><p>掲題のとおり、アプリを<a href="https://play.google.com/store/apps/details?id=net.yslibrary.omnitweety" target="_blank" rel="noreferrer">Google Play Storeに公開した</a>。</p><p>名前は&quot;Omnitweety&quot;。「オムニツイーティ」と読む。</p><p>機能はホントにシンプルで、「ブラウザ系アプリのシェア機能から、ワンタップでURLをTwitterに共有する」だけだ。</p><ol><li><p>ブラウザの共有からOmnitweetyを選択 <img src="https://lh3.googleusercontent.com/x_0xOYFFqsU6QhfgwaD6F_TM5HtdrbQ_eroLLd4qrIcp4VAr2WA2I5Mgxp8rt0lGTMhxAFAC-4PzAvm9SXsdsQQSMhQs91SpY654goapuyLgqrl3JzNJ_9BcZ0lHogYYrHYmy-fccEHX4ozt0yD3ikQSbgD-_bvK6ujCHgGIsAPXF3hBsDD_FH9On0k1sOtmeBZPG1yxjd7pcSiMneYfQOdc7u2QqImZEPQWMMcolYTV2puqpInu63YW9LctSa-sUGhY8XoZLzqEKzgaJA1djSEFHJzfDD--fiO7nmXdC3ih2g17DDzV4u27Frz-705yFT-Nliz_t7O_RScEPFa1RfRxAfaa-HxjnTtILxw6lGvC6yjFq467aLoAVqmMdbaXPQUE3XWG176arc_GmyURv5dSLOwBMWpxABDnWz6-7FzNGMLHHkKX1pZBMp6GlsKNj5D2Z-wOsgFPCR7pxXJQxzZeTYVpv0kgmwNVQLwvJyMKlhp94DkWZuRu51d3mo73vHV8R_8eKs3gLJryrYLwn8ezsRSPgtwWNU9BCkwOX2k=w440-h782-no" alt="introduction_1"></p></li><li><p>画面下部にポップアップが表示される。あとは待っていれば自動でTwitterに共有される。真ん中の青いボタンをタップすれば即座に共有される。 <img src="https://lh3.googleusercontent.com/t4TzJC81JCzxR4-wKDLcFXvaltiNQw-PiJWrVqlrRedRlXvG7A881_eUT9PJe4iUjT_UZUsGIOZa_P7JRyj6RbxZHcfG8W-g-mPzfYvR8zG2bj5lz-ubpjCSgNoNltWPzia2mM1piOT_ieBTct1AqwWznRRaIFMSPomx8Ssea_yKFgAigvH4nZK4FI02zXMGconoGpFTN2YmIvp23bNC4fapRBj_6hZLLyFaSeAWDsnBn1C82XGMJTtYjjVhc39wrTKsD3DzSw5gwee72VEXMs6Hc2QWVFto51JKYwrSdolljLiqtZhwlzmr1E4i2b8VK0r7ACDagGOnEejFCFPa5ZONO3L5aKctIBbOPRPxvadaqsOz5dTLXp29BaV-8tLiu4Rd02h1Jstih4MsjJUoLps2isxYKFOrXEjqzvAcRjeoEMENPwp6Xwa8W8Svxn-wTJ1MxyJVgX2VQe2D30348m7GHgTJThxk2UPlfHYDidbJNWubUd8ycWu6DSCKzc_KTnBoV_5g0cImPP-nUMoe2KacdoPGRz6hP1r1B35Cqvo=w440-h782-no" alt="introduction_2"></p></li><li><p>もし共有する前にコメントを入れたい場合は、ポップアップの鉛筆アイコンをタップすれば編集画面が起動する。(文字数はURL短縮を考慮) <img src="https://lh3.googleusercontent.com/uFHwDKG5CofEeFViDZxSgfy3szYQ0PBtSIgaGhZTmhCocJqEatw8FnuJ2suXAFnm614ULVi-0b8-OUiUKtANpW7hkIVlFOusrke37RFG3LtdQtNGNl1OhaMensbk4rsUZEN7UlfrpynDfnMRW31nsa3OIoDOHMscx6oqvtXY9rwSjfbjge4Zqu754xyAiOvcm6Sbq-Ibf8lVyrMBnx4UTCrUwc0DsObWi9tTlfBRNyVa5zMr01MsASQNqVO2oLNqdvTclAFnuUIyQzIqdR1CBGB16eW8flMACdcorvsihFlkx8tiwU9C3EWDppBIuclSa00F0wEf0RnzZpPqEoUJKvt9w3T-l3kNdxKGJOuPm3pNDAL7aUrlr1-bLxgMdf5A58u70qh9IrmVGzFq0TJeV3K5zvH6SpxeE4FoYRdRDL1oBWntj7c4aRzaVldO6LxzwMu8aJ654kbjVsoHgNjI4YPJ8wn4wecrmSu5LXBpuyI1xCC7hIYwLwPK5Hnkwom9_50zDQS4rD2zIf-sQZRVOQ7RrNOTVylvFWiq39WXiWI=w440-h782-no" alt="introduction_3"></p></li></ol><p>操作は基本的にこれだけだ。あとは設定画面で&quot;NowBrowsing:&quot;の部分(ヘッダー)を編集できる。</p><h2 id="モチベーション" tabindex="-1">モチベーション <a class="header-anchor" href="#モチベーション" aria-label="Permalink to &quot;モチベーション&quot;">​</a></h2><p>私はTwitterにURLをシェアすることが結構あるんだけど、その際のフローは大体下記のとおりだ。</p><ol><li>ブラウザのシェア機能からTwitterクライアントアプリを選択する</li><li>クリップボード管理アプリからヘッダーに使ってる定型文をコピーする</li><li>Twitterクライアントの入力欄に貼り付ける</li><li>タイトルが長かったら適度に削除する</li><li>共有する</li></ol><p>結構手順多くて、しかもこれが毎回のことだから非常にめんどくさい。 Google Play Storeを探してもこれをいい感じに短縮してくれるアプリが見つからなかったので、じゃあ作ってしまえ、となった。</p><p>作るにあたって決めた要件は下記の通り</p><ul><li>ブラウザを離れずにシェアできること</li><li>共有する際のテンプレートを予め自由に設定できること</li><li>共有時にコメントを付けたい場合は、自由に編集できること</li></ul><p>そして、上記要件から導き出された仕様が下記のものだ。</p><ul><li>ブラウザからシェアすると、オーバーレイでボタンが表示される(編集、すぐ共有、キャンセル)</li><li>そのまま放置するとn秒後に自動で共有される</li><li>共有時は、Twitterの短縮URL文字数を考慮し、自動でタイトルが短縮される</li><li>編集ボタンをタップすると編集用ダイアログが表示される</li><li>編集ダイアログではヘッダー・タイトルが編集できる</li></ul><p>こんな感じで開発を始めた。 いろいろと初めての挑戦をしたこともあって、だいたいコーディングだけで15人日くらいかかった。</p><h2 id="使ったライブラリとか" tabindex="-1">使ったライブラリとか <a class="header-anchor" href="#使ったライブラリとか" aria-label="Permalink to &quot;使ったライブラリとか&quot;">​</a></h2><h3 id="dagger2" tabindex="-1"><a href="https://github.com/google/dagger" target="_blank" rel="noreferrer">Dagger2</a> <a class="header-anchor" href="#dagger2" aria-label="Permalink to &quot;[Dagger2](https://github.com/google/dagger)&quot;">​</a></h3><p>とてもイケてるDIライブラリ。Componentの分割方法とか結構悩むところは多いけど、これなしでアプリ作るのはもう考えられない。</p><p>今回はグローバルのAppComponentが一つあって、その下に各Activity毎にActivityComponentを作る構成にしてみた。FragmentやViewにも、ActivityComponentからinjectする感じ。</p><h3 id="immutables" tabindex="-1"><a href="https://github.com/immutables/immutables" target="_blank" rel="noreferrer">Immutables</a> <a class="header-anchor" href="#immutables" aria-label="Permalink to &quot;[Immutables](https://github.com/immutables/immutables)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>public abstract book {</span></span>
<span class="line"><span>  String title();</span></span>
<span class="line"><span>  String author();</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>みたいなアブストラクトなモデルクラスを用意しておくと、アノテーションプロセッサを使ってイミュータブルなモデルクラスを作ってくれるライブラリ。ビルダークラス周りとか機能が充実しているので結構便利。<br> Gson連携もできるけど、後述するTwitter Kitが使ってるGsonの設定をいじれないのでうまく使うことができなかった。<br> 最初はプレゼンテーション層やデータ層のモデルクラスを全部これで作ってたんだけど、最終的にRealmのLazy Loadをフル活用しよう、という方向になったので使う箇所が減ってしまった。DBにSQLiteを使う時やGsonを自由にいじれる時、そしてアプリの各層を疎結合にしたい時は(というかRealm使わなければ)とても便利だと思う。</p><h3 id="rxjava-rxandroid" tabindex="-1"><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="noreferrer">RxJava</a>/<a href="https://github.com/ReactiveX/RxAndroid" target="_blank" rel="noreferrer">RxAndroid</a> <a class="header-anchor" href="#rxjava-rxandroid" aria-label="Permalink to &quot;[RxJava](https://github.com/ReactiveX/RxJava)/[RxAndroid](https://github.com/ReactiveX/RxAndroid)&quot;">​</a></h3><p>色々リアクティブに扱えるライブラリ。リスト操作やスレッド周りの処理が楽に書けるので、今回もお世話になっている。</p><h3 id="databinding" tabindex="-1"><a href="http://developer.android.com/intl/ja/tools/data-binding/guide.html" target="_blank" rel="noreferrer">Databinding</a> <a class="header-anchor" href="#databinding" aria-label="Permalink to &quot;[Databinding](http://developer.android.com/intl/ja/tools/data-binding/guide.html)&quot;">​</a></h3><p>Androidにもついにやってきたデータバインディング。<br> xmlにロジックを書くの、なれるまでちょっとモニョるしAndroid Studioのサポートもまだまだだけど、モデルクラスに値を設定するだけで画面が更新されるっていうのはちょっとライフチェンジングだった。いい使い方を模索したい。</p><h3 id="recyclerview-multipleviewtypeadapter" tabindex="-1"><a href="https://github.com/yqritc/RecyclerView-MultipleViewTypesAdapter" target="_blank" rel="noreferrer">RecyclerView-MultipleViewTypeAdapter</a> <a class="header-anchor" href="#recyclerview-multipleviewtypeadapter" aria-label="Permalink to &quot;[RecyclerView-MultipleViewTypeAdapter](https://github.com/yqritc/RecyclerView-MultipleViewTypesAdapter)&quot;">​</a></h3><p>RecyclerViewで複数のViewTypeを扱う時の処理を簡単に書ける。基本的にいいんだけど、今回良く使った<code>EnumBindListAdapter</code>はEnumとDataBinderの関連付けが弱かったり、ちょっと足りないところがあるのでそのうちオレオレ版を書くかも。</p><h3 id="fabric-twitter-kit" tabindex="-1"><a href="https://get.fabric.io/android" target="_blank" rel="noreferrer">Fabric Twitter Kit</a> <a class="header-anchor" href="#fabric-twitter-kit" aria-label="Permalink to &quot;[Fabric Twitter Kit](https://get.fabric.io/android)&quot;">​</a></h3><p><a href="/2015/09/12/app-created-during-summer-vacation/">前回作ったアプリ</a>で非常に便利だったので、今回も継続使用。</p><h3 id="twiter-text" tabindex="-1"><a href="https://github.com/twitter/twitter-text" target="_blank" rel="noreferrer">twiter-text</a> <a class="header-anchor" href="#twiter-text" aria-label="Permalink to &quot;[twiter-text](https://github.com/twitter/twitter-text)&quot;">​</a></h3><p>Twitterのステータス本文に関する様々な処理を行ってくれる。URLの短縮を考慮した文字数の計算とか、ステータス本文からURLのみ取得するとか。Twitter謹製なので、これ使っておけば間違いないかなーって感じ。</p><h3 id="realm" tabindex="-1"><a href="https://github.com/realm/realm-java/" target="_blank" rel="noreferrer">Realm</a> <a class="header-anchor" href="#realm" aria-label="Permalink to &quot;[Realm](https://github.com/realm/realm-java/)&quot;">​</a></h3><p>最近流行りのDBライブラリ。<br> 動作は速くて最近よく使ってるけど、まだまだ制限多いかなーって印象。<br> RxJavaサポート待ってます。</p><h3 id="tray" tabindex="-1"><a href="https://github.com/grandcentrix/tray" target="_blank" rel="noreferrer">Tray</a> <a class="header-anchor" href="#tray" aria-label="Permalink to &quot;[Tray](https://github.com/grandcentrix/tray)&quot;">​</a></h3><p>マルチプロセスをサポートした、SharedPreferenceの代替ライブラリ。<br> 個人的にはマルチプロセスもそうだけど、自動で作成日時や更新日時を保存してくれるのがよい。Android MのAuto Backupもサポートしている。</p><h2 id="アーキテクチャ" tabindex="-1">アーキテクチャ <a class="header-anchor" href="#アーキテクチャ" aria-label="Permalink to &quot;アーキテクチャ&quot;">​</a></h2><p>今回は昨今の流行りに乗ってMVPでの実装を試してみた。</p><p><a href="https://github.com/android10/Android-CleanArchitecture" target="_blank" rel="noreferrer">https://github.com/android10/Android-CleanArchitecture</a> 参考にしたのは↑このレポジトリで、いわゆる&quot;Clean Architecture&quot;だ。</p><p>今までビジネスロジックは機能ごとに一つのクラスにまとめるタイプの実装ばかりしていたので、1ユースケース1クラス、という実装はとても新鮮だった。クラス数・メソッド数はすごい勢いで増えるけど、ユースケース毎にクラスが分かれてるから実装がシンプルで見やすくなってよい。また、データの取得や保存ロジックも別レイヤに分かれているのでコードの見通しはやっぱりよい。</p><p>ただ正直言って、数画面しかないこのレベルのアプリケーションでは完全にオーバーキルだった。今回は単にClean Architectureやってみたかったから採用したけど、アプリの規模にあったアーキテクチャ選ぶのも重要だと実感した。</p><p>最初はこのレポジトリの実装例に忠実に、各レイヤで別々にモデルクラス用意して、レイヤ間で受け渡しするときにパースして…ってやってたんだけど、そのやり方だとRealmの持ち味であるLazy Loadが活かせない。</p><p>なので、いろいろ悩んだ結果結局Realmで管理してるデータは、<code>RealmObject</code>をそのまま各レイヤで使うことにした。アーキテクチャ的にはあまり美しくないけど、Realmの利点を活かしたいなら仕方ない気がしている。うまいことRealm使えるアーキテクチャ模索したい。</p><h2 id="アイコン" tabindex="-1">アイコン <a class="header-anchor" href="#アイコン" aria-label="Permalink to &quot;アイコン&quot;">​</a></h2><p>アイコンは今回かなりこだわった箇所で、<a href="https://99designs.jp/" target="_blank" rel="noreferrer">99designs</a>というサイトで<a href="https://99designs.jp/icon-button-design/contests/android-app-icon-unique-twitter-client-554071/entries?filter=all" target="_blank" rel="noreferrer">クラウドソーシングしてみた</a>。3万円ほどでたくさんデザインが集まり、非常に満足している。ただ、満足しているとはいっても応募作品の中に盗作があったりして思うところはあるので、そのうちまとめようと思っている。</p><h2 id="そういえばなんでomnitweetyなのか" tabindex="-1">そういえばなんでOmnitweetyなのか？ <a class="header-anchor" href="#そういえばなんでomnitweetyなのか" aria-label="Permalink to &quot;そういえばなんでOmnitweetyなのか？&quot;">​</a></h2><p>同じような機能のChrome拡張機能を<a href="https://chrome.google.com/webstore/detail/omnitweety/jkghejckpigfbolkdkplfokccgpjjilb" target="_blank" rel="noreferrer">以前リリースしてる</a>ので、名前揃えたほうがいいよなーと思ったのでこの名前に。Chromeのオムニバー(アドレスバー)からツイートするので&quot;Omnitweety&quot;だ。ホントは&quot;Omnitweet&quot;にしたかったけど名前がとられてたから&quot;y&quot;をつけてみた。<br> 拡張機能と名前を揃えよう、と思いつく前は&quot;TweetLink&quot;とかそのまんまの名前を考えていた。</p><h2 id="今後の予定" tabindex="-1">今後の予定 <a class="header-anchor" href="#今後の予定" aria-label="Permalink to &quot;今後の予定&quot;">​</a></h2><p>幾つか機能追加を検討中。</p><ul><li>フッター設定</li><li>通知バーからツイート</li><li>Omnitweetyから共有したURLの履歴表示</li></ul><p>こちらからは以上です。</p><p>Omnitweety PlayStoreリンク: <a href="https://play.google.com/store/apps/details?id=net.yslibrary.omnitweety" target="_blank" rel="noreferrer">https://play.google.com/store/apps/details?id=net.yslibrary.omnitweety</a></p>`,52)])])}const u=t(o,[["render",l]]);export{m as __pageData,u as default};
