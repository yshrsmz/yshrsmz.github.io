import{_ as a,a as i,o as n,X as t}from"./chunks/framework.Cp7KI1mb.js";const c=JSON.parse('{"title":"yarn install と NODE_ENV","description":"","frontmatter":{"layout":"post","title":"yarn install と NODE_ENV","category":"programming","tags":["Node.js","docker","TIL"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2021/04/27/yarn-install-node-env/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2021/04/27/yarn-install-node-env/"}],["meta",{"property":"og:title","content":"yarn install と NODE_ENV"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2021/04/27/yarn-install-node-env/ogp.png"}]]},"headers":[],"relativePath":"2021/04/27/yarn-install-node-env/index.md","filePath":"posts/2021/2021-04-27-yarn-install-node-env.md","date":{"time":"2021-04-27","string":"April 27, 2021","year":"2021","month":"04","day":"27"}}'),l={name:"2021/04/27/yarn-install-node-env/index.md"};function e(p,s,r,h,k,o){return n(),i("div",null,[...s[0]||(s[0]=[t(`<h2 id="tl-dr" tabindex="-1">TL;DR; <a class="header-anchor" href="#tl-dr" aria-label="Permalink to &quot;TL;DR;&quot;">​</a></h2><p><code>NODE_ENV=production</code> が設定済みの環境で <code>yarn install</code> を実行すると <code>yarn install --production</code> と同等の動作をする</p><hr><p>言われてみればそれはそう、って感じではあるし、<a href="https://classic.yarnpkg.com/en/docs/cli/install#toc-yarn-install-production-true-false" target="_blank" rel="noreferrer">ドキュメントにもそう書いてある</a>。</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ARG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BUILD_ENV=production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> public.ecr.aws/bitnami/node:14.16.1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build-stage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ARG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BUILD_ENV</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NODE_ENV=\${BUILD_ENV}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> install_packages curl ca-certificates</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /usr/local/bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /app</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yarn install</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yarn build:\${BUILD_ENV}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yarn install --production</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /usr/local/bin/node-prune</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> public.ecr.aws/bitnami/node:14.16.1-prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> production-stage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ARG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BUILD_ENV</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NODE_ENV \${BUILD_ENV}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> install_packages curl ca-certificates</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=build-stage /app /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./node_modules/.bin/nuxt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span></code></pre></div><p>こんな Dockerfile を書いて、 <code>BUILD_ENV=production</code> で実行した時に <code>yarn build:production</code> が失敗しててめっちゃつまった。エラー的には <code>ts-loader</code> が見つからないとかそんな感じ。</p><p>いろいろ書き換えながら試してたら、最初に書いてたとおり <code>NODE_ENV=production</code> と環境変数を設定しちゃってたのが原因だった。devDependencies がインストールされない状態。</p><blockquote><p>Yarn will not install any package listed in devDependencies if the NODE_ENV environment variable is set to production</p></blockquote><p><a href="https://classic.yarnpkg.com/en/docs/cli/install#toc-yarn-install-production-true-false" target="_blank" rel="noreferrer">ドキュメントにもそう書いてあった</a>。</p><p>今回の場合は、 build-stage ではそもそも <code>NODE_ENV</code> 必要なかったので <code>ENV NODE_ENV=\${BUILD_ENV}</code> をこのステージから削除して解決。</p><p>ドキュメントはちゃんと読みましょう。</p>`,11)])])}const E=a(l,[["render",e]]);export{c as __pageData,E as default};
