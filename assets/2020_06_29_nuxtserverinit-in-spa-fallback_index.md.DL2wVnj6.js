import{_ as i,a,o as t,X as n}from"./chunks/framework.Cp7KI1mb.js";const c=JSON.parse('{"title":"Nuxt.js静的サイトモードのfallbackのSPAモードとnuxtServerInit","description":"","frontmatter":{"layout":"post","title":"Nuxt.js静的サイトモードのfallbackのSPAモードとnuxtServerInit","category":"programming","tags":["Vue.js","nuxt.js","TIL"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2020/06/29/nuxtserverinit-in-spa-fallback/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2020/06/29/nuxtserverinit-in-spa-fallback/"}],["meta",{"property":"og:title","content":"Nuxt.js静的サイトモードのfallbackのSPAモードとnuxtServerInit"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2020/06/29/nuxtserverinit-in-spa-fallback/ogp.png"}]]},"headers":[],"relativePath":"2020/06/29/nuxtserverinit-in-spa-fallback/index.md","filePath":"posts/2020/2020-06-29-nuxtserverinit-in-spa-fallback.md","date":{"time":"2020-06-29","string":"June 29, 2020","year":"2020","month":"06","day":"29"}}'),e={name:"2020/06/29/nuxtserverinit-in-spa-fallback/index.md"};function p(l,s,h,r,k,d){return t(),a("div",null,[...s[0]||(s[0]=[n(`<p>大前提として、<code>nuxtServerInit</code>というAction名のとおり、これはサーバサイドでしか実行されない。<br> 静的サイトモードだと、設定によるけど<code>generate</code>コマンドの実行時に呼ばれる。</p><p>そしてfallbackのSPAモード。これは動的に扱いたいroute用の機能だけど、このSPAモード用のhtml(200.htmlとか404.htmlとか)の生成時には<code>nuxtServerInit</code>は呼ばれない。</p><p>SPAモードでは<code>nuxtServerInit</code>呼ばれない、という仕様なんだから確かにそのとおり。なんだけどこれを完全に失念しててSPAモードで表示していた一部ページと、そこから遷移した各ページで一部データにアクセスできない、という状況が生まれてしまっていた。</p><p>解決する方法はいくつかあるけど、今回はSPAモードでも<code>nuxtServerInit</code>を呼ぶ方法を採用した。<br> 実装は簡単。</p><p>まずはStateに初期化済みかどうか判定できる値を用意する。<code>initialized: boolean</code>みたいな値を用意するのでもいいだろう。</p><p>次にpluginを追加する。単純に、Stateが初期化済みでなければ<code>nuxtServerInit</code>を実行する。<br><code>res</code>とか<code>req</code>とか<code>context</code>の一部の値はクライアント側ではアクセスできないので、そこは注意が必要。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ~/plugins/init.client.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Context } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@nuxt/types&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { RootState } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;~/store&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(store.state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RootState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).initialized) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nuxtServerInit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, app.context)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>nuxt.config.ts</code>のplugin設定はこんな感じに</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { src: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~/plugins/init.client.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;client&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><code>mode: &#39;client&#39;</code>が重要。<code>nuxtServerInit</code>はサーバサイドでは普通に呼ばれるので、SPAモード(=ブラウザ側)でのみ処理されればいい。</p><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h3><ul><li><a href="https://github.com/nuxt/nuxt.js/issues/7051#issuecomment-604914461" target="_blank" rel="noreferrer">Generate and dynamic route fallback if static file is not generated · Issue #7051 · nuxt/nuxt.js</a></li></ul>`,12)])])}const E=i(e,[["render",p]]);export{c as __pageData,E as default};
