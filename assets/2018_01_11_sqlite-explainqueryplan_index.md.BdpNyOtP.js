import{_ as a,a as i,o as n,X as e}from"./chunks/framework.Cp7KI1mb.js";const c=JSON.parse('{"title":"SQLiteでインデックスが使われているかどうか確認する","description":"","frontmatter":{"layout":"post","title":"SQLiteでインデックスが使われているかどうか確認する","category":"programming","tags":["TIL","sqlite"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2018/01/11/sqlite-explainqueryplan/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2018/01/11/sqlite-explainqueryplan/"}],["meta",{"property":"og:title","content":"SQLiteでインデックスが使われているかどうか確認する"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2018/01/11/sqlite-explainqueryplan/ogp.png"}]]},"headers":[],"relativePath":"2018/01/11/sqlite-explainqueryplan/index.md","filePath":"posts/2018/2018-01-11-sqlite-explainqueryplan.md","date":{"time":"2018-01-11","string":"January 11, 2018","year":"2018","month":"01","day":"11"}}'),t={name:"2018/01/11/sqlite-explainqueryplan/index.md"};function p(l,s,h,k,r,d){return n(),i("div",null,[...s[0]||(s[0]=[e('<div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXPLAIN QUERY PLAN SQL_QUERY;</span></span></code></pre></div><p>でクエリ実行計画を確認できる。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `bank`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `id`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INTEGER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOINCREMENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `bank_code`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `name`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   `kana`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><p>たとえばこういうテーブルがあったときに<code>bank_code</code>でデータを取得するクエリの実行計画を見てみると、下記のようになる。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EXPLAIN QUERY PLAN SELECT * FROM bank WHERE bank_code = &quot;0001&quot;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>selectid    order       from        detail          </span></span>\n<span class="line"><span>----------  ----------  ----------  ----------------</span></span>\n<span class="line"><span>0	    0           0	    SCAN TABLE bank</span></span></code></pre></div><p><code>bank_code</code>にインデックスを追加すると、下記のようになる</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> UNIQUE INDEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">index_bank_bank_code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">` </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `bank`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`bank_code`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EXPLAIN QUERY PLAN SELECT * FROM bank WHERE bank_code = &quot;0001&quot;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>selectid    order       from        detail          </span></span>\n<span class="line"><span>----------  ----------  ----------  ----------------</span></span>\n<span class="line"><span>0	    0           0	    SEARCH TABLE bank USING INDEX index_bank_bank_code (bank_code=?)</span></span></code></pre></div><p><code>explain SQL_QUERY</code>でもクエリがどのように実行されているかを確認することができる。<br> SQLのパフォーマンスを検証したいときには便利そう</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://medium.com/@JasonWyatt/squeezing-performance-from-sqlite-indexes-indexes-c4e175f3c346" target="_blank" rel="noreferrer">Primary Keys, Query Planning, and Binary Search</a></li><li><a href="https://www.sqlite.org/eqp.html" target="_blank" rel="noreferrer">EXPLAIN QUERY PLAN</a></li><li><a href="http://www.hwaci.com/sw/sqlite/opcode.html" target="_blank" rel="noreferrer">The SQLite Bytecode Engine</a></li></ul>',11)])])}const E=a(t,[["render",p]]);export{c as __pageData,E as default};
