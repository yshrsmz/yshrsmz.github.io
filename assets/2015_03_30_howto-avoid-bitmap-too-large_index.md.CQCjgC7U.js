import{_ as t,a as i,o as s,X as e}from"./chunks/framework.Cp7KI1mb.js";const c=JSON.parse('{"title":"(Android) Bitmap too large to 〜が出た時の対処法","description":"","frontmatter":{"layout":"post","title":"(Android) Bitmap too large to 〜が出た時の対処法","category":"programming","tags":["Android","java"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2015/03/30/howto-avoid-bitmap-too-large/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2015/03/30/howto-avoid-bitmap-too-large/"}],["meta",{"property":"og:title","content":"(Android) Bitmap too large to 〜が出た時の対処法"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2015/03/30/howto-avoid-bitmap-too-large/ogp.png"}]]},"headers":[],"relativePath":"2015/03/30/howto-avoid-bitmap-too-large/index.md","filePath":"posts/2015/2015-03-30-howto-avoid-bitmap-too-large.md","date":{"time":"2015-03-30","string":"March 30, 2015","year":"2015","month":"03","day":"30"}}'),o={name:"2015/03/30/howto-avoid-bitmap-too-large/index.md"};function n(p,a,l,r,d,h){return s(),i("div",null,[...a[0]||(a[0]=[e(`<p>Bitmapを扱っているとたまに下記のようなエラーにぶち当たることがあります。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>W/OpenGLRenderer: Bitmap too large to be uploaded into a texture(4000x4000, max=2048x2048)</span></span></code></pre></div><p>読んで字の通り、Bitmapが大きすぎて、OpenGLRendererで取り扱えない。<br> 限界は縦横2048pxまでのようです。<br> 解決方法は２つあります。</p><ul><li>画像を2048x2048まで縮小する</li><li>ハードウェアアクセラレーションを無効にする。</li></ul><p>サムネイルとかフルサイズで表示する必要がない時は縮小するのが良さそう。<br> ただ、フルスクリーンで画像を表示してピンチズームとかしたい時は２つ目の方法でいきたい。</p><p>OS 4.0以降だと各Viewで個別にハードウェアアクセラレーションをOFFにしましょう。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mImageView.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLayerType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(View.LAYER_TYPE_SOFTWARE, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>ただこれだとメモリ足りなくなる端末もありそうだから、<code>AndroidManifest.xml</code>でヒープサイズも設定しておいたほうがいいかも？</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Application</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;net.yslibrary.android.foo.MainApplication&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    android:largeHeap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,9)])])}const k=t(o,[["render",n]]);export{c as __pageData,k as default};
