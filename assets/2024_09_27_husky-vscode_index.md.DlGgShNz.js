import{_ as i,a,o as t,X as e}from"./chunks/framework.Cp7KI1mb.js";const c=JSON.parse('{"title":"Husky で設定した Git hooks を VSCode でも動くようにする","description":"","frontmatter":{"layout":"post","title":"Husky で設定した Git hooks を VSCode でも動くようにする","tags":["TIL","husky","git"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2024/09/27/husky-vscode/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2024/09/27/husky-vscode/"}],["meta",{"property":"og:title","content":"Husky で設定した Git hooks を VSCode でも動くようにする"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2024/09/27/husky-vscode/ogp.png"}]]},"headers":[],"relativePath":"2024/09/27/husky-vscode/index.md","filePath":"posts/2024/2024-09-27-husky-vscode.md","date":{"time":"2024-09-27","string":"September 27, 2024","year":"2024","month":"09","day":"27"}}'),n={name:"2024/09/27/husky-vscode/index.md"};function h(l,s,p,o,k,r){return t(),a("div",null,[...s[0]||(s[0]=[e(`<p>掲題の通り。レポジトリ内の設定だけだと、VSCode の Source Control からだと動かない</p><p><strong>目次</strong></p><nav class="table-of-contents"><ul><li><a href="#tl-dr">TL;DR</a></li><li><a href="#くわしく">くわしく</a></li></ul></nav><h2 id="tl-dr" tabindex="-1">TL;DR <a class="header-anchor" href="#tl-dr" aria-label="Permalink to &quot;TL;DR&quot;">​</a></h2><p><code>~/.config/husky/init.sh</code> でフック実行前処理を書くことができる.</p><h2 id="くわしく" tabindex="-1">くわしく <a class="header-anchor" href="#くわしく" aria-label="Permalink to &quot;くわしく&quot;">​</a></h2><p><a href="https://typicode.github.io/husky/" target="_blank" rel="noreferrer">Husky</a> をレポジトリの設定だけした状態で VSCode の Source Control を使うと、 pre-commit などのフック自体は実行されるものの、下記のようなエラーがアラートダイアログで表示される。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Git: .husky/pre-commit: line 7: pnpm: command not found</span></span></code></pre></div><p>同アラートダイアログから実行ログを確認すると、さらに細かい情報が見れる</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> git -c user.useConfigOnly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quiet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --allow-empty-message</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/Users/yshrsmz/repos/github.com/yshrsmz/sample/.husky/pre-commit:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 7:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pre-commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (code </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PATH=node_modules/.bin:/Applications/Xcode.app/Contents/Developer/usr/libexec/git-core:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin</span></span></code></pre></div><p>私は homebrew からインストールした anyenv 経由で nodenv をインストールし、 Node.js のバージョンを管理している。しかしログからわかるように、 PATH に homebrew のバイナリディレクトリ入ってないし、nodenv のディレクトリも入っていない。なので homebrew と nodenv を PATH に含められればなんとかなりそうな感じ。</p><p>Husky 公式サイトの <a href="https://typicode.github.io/husky/troubleshoot.html#command-not-found" target="_blank" rel="noreferrer">Troubleshoot</a> を見ると、この command not found の解消方法が記載されている。</p><blockquote><h2 id="startup-files" tabindex="-1">Startup files <a class="header-anchor" href="#startup-files" aria-label="Permalink to &quot;Startup files&quot;">​</a></h2><p>Husky allows you to execute local commands before running hooks. It reads commands from these files:</p><ul><li>$XDG_CONFIG_HOME/husky/init.sh</li><li>~/.config/husky/init.sh</li><li>~/.huskyrc (deprecated)</li></ul></blockquote><p><a href="https://typicode.github.io/husky/how-to.html#startup-files" target="_blank" rel="noreferrer">https://typicode.github.io/husky/how-to.html#startup-files</a></p><p><code>~/.config/husky/init.sh</code> を作ればいいということなので、下記の内容で作成したところ、無事 VSCode からも Git hooks が実行されるようになった。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/homebrew/bin/brew&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/opt/homebrew/bin/brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shellenv)&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">anyenv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init -)&quot;</span></span></code></pre></div>`,16)])])}const F=i(n,[["render",h]]);export{c as __pageData,F as default};
