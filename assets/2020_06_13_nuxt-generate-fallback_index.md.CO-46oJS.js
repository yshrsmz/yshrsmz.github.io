import{_ as t,a,o as r,X as n}from"./chunks/framework.Cp7KI1mb.js";const d=JSON.parse('{"title":"Nuxt.jsでgenerateした時のfallbackオプションについて","description":"","frontmatter":{"layout":"post","title":"Nuxt.jsでgenerateした時のfallbackオプションについて","category":"programming","tags":["Vue.js","nuxt.js","TIL"],"head":[["link",{"rel":"canonical","href":"https://www.codingfeline.com/2020/06/13/nuxt-generate-fallback/"}],["meta",{"property":"og:url","content":"https://www.codingfeline.com/2020/06/13/nuxt-generate-fallback/"}],["meta",{"property":"og:title","content":"Nuxt.jsでgenerateした時のfallbackオプションについて"}],["meta",{"property":"twitter:card","content":"summary_large_image"}],["meta",{"property":"twitter:site","content":"@_yshrsmz"}],["meta",{"property":"twitter:creator","content":"@_yshrsmz"}],["meta",{"property":"og:image","content":"https://www.codingfeline.com/2020/06/13/nuxt-generate-fallback/ogp.png"}]]},"headers":[],"relativePath":"2020/06/13/nuxt-generate-fallback/index.md","filePath":"posts/2020/2020-06-13-nuxt-generate-fallback.md","date":{"time":"2020-06-13","string":"June 13, 2020","year":"2020","month":"06","day":"13"}}'),o={name:"2020/06/13/nuxt-generate-fallback/index.md"};function c(l,e,p,s,i,g){return r(),a("div",null,[...e[0]||(e[0]=[n('<p><a href="https://ja.nuxtjs.org/api/configuration-generate/#fallback" target="_blank" rel="noreferrer">https://ja.nuxtjs.org/api/configuration-generate/#fallback</a></p><p><code>generate.fallback=true</code> にすると <code>404.html</code> が生成される。 これ、動的にルーティングしたいページへのリクエストが来たときに、「URLはそのままで<code>404.html</code>を提供する」という使い方をするものだった。 最初この使い方がよくわかってなくて、単純に存在しないページへのリクエストがあったときに単純にリダイレクトしてたけど、そういうことじゃなかった。</p><p><code>404.html</code> ということで単純なエラーページぽく見えていたけど、実際はこのhtml上でURLに基づいてルーティングをしてくれる。 そこで解決できたらそのままページを表示するし見つからなければ<code>/components/layout/error.vue</code>で書いたエラーページに遷移するし、という挙動。</p><p>わかってしまえばそりゃそうだ、という話でした。</p>',4)])])}const f=t(o,[["render",c]]);export{d as __pageData,f as default};
